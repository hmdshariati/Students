main	main.cpp	/^int main(int argc, char** argv) {$/;"	f
MKDIR	Makefile	/^MKDIR=mkdir$/;"	m
CP	Makefile	/^CP=cp$/;"	m
CCADMIN	Makefile	/^CCADMIN=CCadmin$/;"	m
Student	Student.cpp	/^Student::Student() {$/;"	f	class:Student
Student	Student.cpp	/^Student::Student(string  f, string l)$/;"	f	class:Student
Student	Student.cpp	/^Student::Student(const Student& orig) {$/;"	f	class:Student
~Student	Student.cpp	/^Student::~Student() {$/;"	f	class:Student
setProperties	Student.cpp	/^void Student::setProperties(string f,string l, double avg)$/;"	f	class:Student
setPar	Student.cpp	/^void Student::setPar( string& par1,string  par2)$/;"	f	class:Student
setPar	Student.cpp	/^void Student::setPar(int par1, int par2)$/;"	f	class:Student
getFname	Student.cpp	/^string const Student::getFname()$/;"	f	class:Student
getLname	Student.cpp	/^string const Student::getLname()$/;"	f	class:Student
getNation	Student.cpp	/^string const Student::getNation()$/;"	f	class:Student
setUnits	Student.cpp	/^void Student::setUnits(int total, int passed)$/;"	f	class:Student
setAverage	Student.cpp	/^void Student::setAverage(double avg)$/;"	f	class:Student
getPassed	Student.cpp	/^int const Student::getPassed()$/;"	f	class:Student
getRemain	Student.cpp	/^int const Student::getRemain()$/;"	f	class:Student
getTotal	Student.cpp	/^int const Student::getTotal()$/;"	f	class:Student
Student	Student.h	/^class Student {$/;"	c
Student	Student.h	/^    Student();$/;"	p	class:Student
Student	Student.h	/^    Student(string f,string l);\/\/a constructor with first name and last name $/;"	p	class:Student
Student	Student.h	/^    Student(int t,int p,int r); \/\/a constructor with the information of units$/;"	p	class:Student
Student	Student.h	/^    Student(const Student& orig);$/;"	p	class:Student
~Student	Student.h	/^    virtual ~Student();$/;"	p	class:Student
setPar	Student.h	/^    void setPar(int par1,int par2);$/;"	p	class:Student
setPar	Student.h	/^    void setPar(string& par1,string par2);$/;"	p	class:Student
getNation	Student.h	/^    string const getNation();$/;"	p	class:Student
getFname	Student.h	/^    string const getFname();$/;"	p	class:Student
getLname	Student.h	/^    string const getLname();$/;"	p	class:Student
getStdno	Student.h	/^    int const getStdno();$/;"	p	class:Student
setAverage	Student.h	/^    void setAverage(double avg);$/;"	p	class:Student
setUnits	Student.h	/^    void setUnits(int total, int passed);$/;"	p	class:Student
setProperties	Student.h	/^    void setProperties(string f,string l, double avg);$/;"	p	class:Student
getPassed	Student.h	/^    int const getPassed();$/;"	p	class:Student
getRemain	Student.h	/^    int const getRemain();$/;"	p	class:Student
getTotal	Student.h	/^    int const getTotal();$/;"	p	class:Student
nationalCode	Student.h	/^    string nationalCode,fname,lname,studentNo;$/;"	m	class:Student
fname	Student.h	/^    string nationalCode,fname,lname,studentNo;$/;"	m	class:Student
lname	Student.h	/^    string nationalCode,fname,lname,studentNo;$/;"	m	class:Student
studentNo	Student.h	/^    string nationalCode,fname,lname,studentNo;$/;"	m	class:Student
passedUnits	Student.h	/^    int passedUnits,totalUnits,remainUnits;$/;"	m	class:Student
totalUnits	Student.h	/^    int passedUnits,totalUnits,remainUnits;$/;"	m	class:Student
remainUnits	Student.h	/^    int passedUnits,totalUnits,remainUnits;$/;"	m	class:Student
average	Student.h	/^    double average;$/;"	m	class:Student
